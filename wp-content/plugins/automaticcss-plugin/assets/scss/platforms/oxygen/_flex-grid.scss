@include load-flex-grid--has-nested(section, ".ct-section-inner-wrap");

// Deprecated in 2.6. Remove in 2.7:

// @if $option-flex-grids == on {
//     .flex-grid--1:not(.ct-section),
//     .ct-section.flex-grid--1  > .ct-section-inner-wrap {
//         --gap: var(--grid-gap);
//         display: flex;
//         flex-direction: column;
//         gap: var(--gap);

//         > * {
//             width: 100%;
//             max-width: 100%;
//             flex-basis: auto;
//         }
//     }

//     @each $col-count in $flex-grids {
//         $gap-count: $col-count - 1;

//         .flex-grid--#{$col-count}:not(.ct-section),
//         .ct-section.flex-grid--#{$col-count}  > .ct-section-inner-wrap {
//             @include flex-grid;

//             @each $extension, $value in $sizeExtensions {
//                 &.gap--#{$extension} {
//                     --gap: var(--space-#{$extension});
//                 }
//             }

//             > * {
//                 width: 100%;
//                 max-width: calc((100% - (var(--gap) * #{$gap-count})) / #{$col-count});
//             }
//         }

//         @each $breakpoint, $value in $breakpoints {
//             @include breakpoint($breakpoint) {

//                 .flex-grid--#{$breakpoint}-1:not(.ct-section),
//                 .ct-section.flex-grid--#{$breakpoint}-1  > .ct-section-inner-wrap {
//                     --gap: var(--grid-gap);
//                     display: flex;
//                     flex-direction: column;
//                     gap: var(--gap);

//                     > * {
//                         width: 100%;
//                         max-width: 100%;
//                         flex-basis: auto;
//                     }
//             }

//                 @each $col-count in $flex-grids {
//                     $gap-count: $col-count - 1;
//                     .flex-grid--#{$breakpoint}-#{$col-count}:not(.ct-section),
//                     .ct-section.flex-grid--#{$breakpoint}-#{$col-count} > .ct-section-inner-wrap {
//                         @include flex-grid;

//                         @each $extension, $value in $sizeExtensions {
//                             &.gap--#{$breakpoint}-#{$extension} {
//                                 --gap: var(--space-#{$extension});
//                             }
//                         }

//                         > * {
//                             width: 100%;
//                             max-width: calc((100% - (var(--gap) * #{$gap-count})) / #{$col-count});
//                         }
//                     }
//                 }
//             }
//         }
//     }
// }